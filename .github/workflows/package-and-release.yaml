name: Package and Release

on: [pull_request]
#  workflow_dispatch:
#    inputs:
#      release_version:
#        description: 'Version to be released'
#        required: true


jobs:
  Package-Linux-Version:
    runs-on: ubuntu-18.04
    if: ${{ false }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install stuff
      run: |
        set -e
        curl -o  pyoxidizer.zip -L "https://github.com/indygreg/PyOxidizer/releases/download/pyoxidizer%2F0.17/pyoxidizer-0.17.0-linux_x86_64.zip"
        unzip pyoxidizer.zip
        chmod +x ./pyoxidizer

        sudo apt-get install -y sqlite3

    - name: Create Executable
      run: |
        set -e
        ./pyoxidizer build --release

        export Q_EXECUTABLE=./build/x86_64-unknown-linux-gnu/release/install/q

        seq 1 100 | $Q_EXECUTABLE -c 1 "select sum(c1),count(*) from -"

        mkdir -p artifacts/linux/
        cp $Q_EXECUTABLE artifacts/linux/

    - name: Upload Artifact - TBD Move to the end
      uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: artifacts/
    - name: Install Python for Testing
      uses: actions/setup-python@v2
      with:
        python-version: '3.8.12'
        architecture: 'x64'
    - name: Prepare Testing
      run: |
        set -e
        
        pip3 install -r test-requirements.txt
    - name: Run Tests
      run: |
        Q_EXECUTABLE=../build/x86_64-unknown-linux-gnu/release/install/q bash -x test/test-all

  Package-Mac-Version:
    runs-on: macos-11
    if: ${{ false }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install stuff
      run: |
        set -e
        set -x

        curl -o  pyoxidizer.zip -L "https://github.com/indygreg/PyOxidizer/releases/download/pyoxidizer%2F0.17/pyoxidizer-0.17.0-macos-universal.zip"
        unzip pyoxidizer.zip
        mv macos-universal/pyoxidizer ./pyoxidizer

        chmod +x ./pyoxidizer

        # no need to install sqlite on a mac

    - name: Create Executable
      run: |
        set -e
        set -x

        ./pyoxidizer build --release

        find ./build/

        export Q_EXECUTABLE=./build/x86_64-apple-darwin/release/install/q

        seq 1 100 | $Q_EXECUTABLE -c 1 "select sum(c1),count(*) from -"

        mkdir -p artifacts/macos/
        cp $Q_EXECUTABLE artifacts/macos/

    - name: Upload Artifact - TBD Move to the end
      uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: artifacts/
    - name: Install Python for Testing
      uses: actions/setup-python@v2
      with:
        python-version: '3.8.12'
        architecture: 'x64'
    - name: Prepare Testing
      run: |
        set -e

        pip3 install -r test-requirements.txt
    - name: Run Tests
      run: |
        Q_EXECUTABLE=../build/x86_64-apple-darwin/release/install/q bash -x test/test-all

  Package-Windows-Version:
    runs-on: windows-2016

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Download
      shell: bash
      run: |
        set -e
        set -x

        curl -o pyoxidizer.msi -L "https://github.com/indygreg/PyOxidizer/releases/download/pyoxidizer%2F0.17/PyOxidizer-0.17.0-x64.msi"
    - name: Install stuff
      shell: powershell
      run: |
        echo Installing pyoxidizer
        start /wait msiexec.exe /i pyoxidizer.msi /quiet /norestart

    - name: Create Executable
      shell: bash
      run: |
        set -e
        set -x

        pyoxidizer.exe build --release

        find ./build/

        export Q_EXECUTABLE=./build/x86_64-pc-windows-msvc/release/install/q

        seq 1 100 | $Q_EXECUTABLE -c 1 "select sum(c1),count(*) from -"

        mkdir -p artifacts/windows/
        cp $Q_EXECUTABLE artifacts/windows/

    - name: Upload Artifact - TBD Move to the end
      uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: artifacts/
    - name: Install Python for Testing
      uses: actions/setup-python@v2
      with:
        python-version: '3.8.12'
        architecture: 'x64'
    - name: Prepare Testing
      run: |
        set -e

        pip3 install -r test-requirements.txt
    - name: Run Tests
      run: |
        Q_EXECUTABLE=../build/x86_64-pc-windows-msvc/release/install/q bash -x test/test-all

#    - name: Create release for ${{ github.event.client_payload.ReleaseBranchName }}
#      uses: actions/create-release@v1.1.1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        tag_name: ${{ github.event.client_payload.ReleaseBranchName }}
#        release_name: ${{ github.event.client_payload.ReleaseTitle }}
#        body: ${{ github.event.client_payload.ReleaseBody }}
#        prerelease: ${{ github.event.client_payload.Prerelease }}
#        commitish: ${{ github.event.client_payload.Commitish }}
