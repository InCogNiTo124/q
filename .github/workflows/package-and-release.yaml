name: Package and Release

on: [pull_request]
#  workflow_dispatch:
#    inputs:
#      release_version:
#        description: 'Version to be released'
#        required: true


jobs:
  Package-Linux-Version:
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: '2.6'  # Perhaps 2.4.1?
    - name: Install pyoxidizer
      run: |
        set -e
        set -x

        sudo apt-get update
        sudo apt-get install -y zip

        curl -o pyoxidizer.zip -L "https://github.com/indygreg/PyOxidizer/releases/download/pyoxidizer%2F0.17/pyoxidizer-0.17.0-linux_x86_64.zip"
        unzip pyoxidizer.zip
        chmod +x ./pyoxidizer
    - name: Install prerequisites for build
        sudo apt-get install -y sqlite3 rpm

        gem install fpm ronn
        cp dist/fpm-config ~/.fpm

        mkdir -p artifacts/linux/
    - name: Create Executable
      run: |
        set -e
        set -x

        ./pyoxidizer build --release

        export Q_EXECUTABLE=./build/x86_64-unknown-linux-gnu/release/install/q

        seq 1 100 | $Q_EXECUTABLE -c 1 "select sum(c1),count(*) from -"

        cp $Q_EXECUTABLE artifacts/linux/
    - name: Create man page
      run: |
        set -x
        set -e

        ronn doc/USAGE.markdown
    - name: Install Python for Testing
      uses: actions/setup-python@v2
      with:
        python-version: '3.8.12'
        architecture: 'x64'
    - name: Prepare Testing
      run: |
        set -e
        set -x
        pip3 install -r test-requirements.txt
    - name: Run Tests
      run: |
        Q_EXECUTABLE=../build/x86_64-unknown-linux-gnu/release/install/q bash -x test/test-all
    - name: Build RPM package
      run: |
        set -e
        set -x

        fpm -s dir -t rpm -p artifacts/linux/q-text-as-data-2.0.20.x86_64.rpm --version 2.0.20 build/x86_64-unknown-linux-gnu/release/install/q=/usr/bin/q doc/USAGE=/usr/share/man/man1/q.1
        fpm -s dir -t deb -p artifacts/linux/q-text-as-data-2.0.20-1.x86_64.deb --version 2.0.20 build/x86_64-unknown-linux-gnu/release/install/q=/usr/bin/q doc/USAGE=/usr/share/man/man1/q.1
    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: artifacts
        path: artifacts/

  Package-Mac-Version:
    runs-on: macos-11
    if: ${{ false }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install stuff
      run: |
        set -e
        set -x

        curl -o  pyoxidizer.zip -L "https://github.com/indygreg/PyOxidizer/releases/download/pyoxidizer%2F0.17/pyoxidizer-0.17.0-macos-universal.zip"
        unzip pyoxidizer.zip
        mv macos-universal/pyoxidizer ./pyoxidizer

        chmod +x ./pyoxidizer

        # no need to install sqlite on a mac

    - name: Create Executable
      run: |
        set -e
        set -x

        ./pyoxidizer build --release

        find ./build/

        export Q_EXECUTABLE=./build/x86_64-apple-darwin/release/install/q

        seq 1 100 | $Q_EXECUTABLE -c 1 "select sum(c1),count(*) from -"

        mkdir -p artifacts/macos/
        cp $Q_EXECUTABLE artifacts/macos/

    - name: Upload Artifact - TBD Move to the end
      uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: artifacts/
    - name: Install Python for Testing
      uses: actions/setup-python@v2
      with:
        python-version: '3.8.12'
        architecture: 'x64'
    - name: Prepare Testing
      run: |
        set -e

        pip3 install -r test-requirements.txt
    - name: Run Tests
      run: |
        Q_EXECUTABLE=../build/x86_64-apple-darwin/release/install/q bash -x test/test-all

  Package-Windows-Version:
    runs-on: windows-latest
    if: ${{ false }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install MSVC build tools
      uses: ilammy/msvc-dev-cmd@v1
    - name: Install Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8.10'
        architecture: 'x64'
        #    - name: Install sqlite3
        #      shell: bash
        #      run: |
        #        set -x
        #        set -e
        #
        #        mkdir artifacts/
        #        find / -ls > artifacts/file-list.txt
    - name: Install pyoxidizer
      shell: bash
      run: |
        set -x
        set -e

        python3 -V
        pip3 -V

        pip3 install pyoxidizer
    - name: Create Executable
      shell: bash
      run: |
        set -e
        set -x

        pyoxidizer build --release

        find ./build/

        export Q_EXECUTABLE=./build/x86_64-pc-windows-msvc/release/install/q

        seq 1 100 | $Q_EXECUTABLE -c 1 "select sum(c1),count(*) from -"

        mkdir -p artifacts/windows/
        cp $Q_EXECUTABLE artifacts/windows/
    - name: Upload Artifact - TBD Move to the end
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: artifacts
        path: artifacts/
    - name: Prepare Testing
      run: |
        set -e

        pip3 install -r test-requirements.txt
    - name: Run Tests
      run: |
        Q_EXECUTABLE=../build/x86_64-pc-windows-msvc/release/install/q bash -x test/test-all

#    - name: Create release for ${{ github.event.client_payload.ReleaseBranchName }}
#      uses: actions/create-release@v1.1.1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        tag_name: ${{ github.event.client_payload.ReleaseBranchName }}
#        release_name: ${{ github.event.client_payload.ReleaseTitle }}
#        body: ${{ github.event.client_payload.ReleaseBody }}
#        prerelease: ${{ github.event.client_payload.Prerelease }}
#        commitish: ${{ github.event.client_payload.Commitish }}
